<div id="comments-list">
  <!-- 댓글 목록 순회 -->
  {{#commentDtos}} <!-- 댓글 목록 리스트 -->
    <div class="card m-2" id="comments-{{id}}">
      <div class="card-header">
        {{nickname}}
        <!-- Button trigger modal -->
        <button type="button"
                class="btn btn-sm btn-outline-primary"
                data-bs-toggle="modal"
                data-bs-target="#comment-edit-modal"
                data-bs-id="{{id}}"
                data-bs-nickname="{{nickname}}"
                data-bs-body="{{body}}"
                data-bs-article-id="{{articleId}}">수정</button> <!-- comment-edit-modal id를 가진 모달 실행 -->
      </div>

      <div class="card-body">
        {{body}}
      </div>
    </div>
  {{/commentDtos}}
</div>

<!-- Modal -->
<div class="modal fade" id="comment-edit-modal" tabindex="-1">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h4 class="modal-title" id="exampleModalLabel">댓글 수정</h4>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <form>
          <!-- 닉네임 입력 -->
          <div class="mb-3">
            <label class="form-label">닉네임</label>
            <input type="text" class="form-control"
                   id="edit-comment-nickname">
          </div>
          <!-- 댓글 본문 입력 -->
          <div class="mb-3">
            <label class="form-label">댓글 내용</label>
            <textarea type="text" class="form-control" rows="3"
                      id="edit-comment-body"></textarea>
          </div>
          <!-- 히든 인풋 -->
          <input type="hidden" id="edit-comment-id">
          <input type="hidden" id="edit-comment-article-id">
          <!-- 전송 버튼 -->
          <button type="button" class="btn btn-primary"
                  id="comment-update-btn">수정 완료</button>
        </form>
      </div>
    </div>
  </div>
</div>

<!--<script>-->
<!--  {-->
<!--    // 댓글 생성 버튼 변수화-->
<!--    const commentUpdateBtn2 = document.querySelector("#comment-update-btn");-->

<!--    // 댓글 생성 버튼 클릭 이벤트 리스너-->
<!--    commentUpdateBtn2.addEventListener("click", function () {-->
<!--      console.log("버튼이 클릭되었습니다."); // 콘솔에 출력-->

<!--      // 댓글 객체 생성-->
<!--      const comment = {-->
<!--        nickname: document.querySelector("#edit-comment-nickname").value,-->
<!--        body: document.querySelector("#edit-comment-body").value,-->
<!--        articleId: document.querySelector("#edit-comment-article-id").value-->
<!--      };-->
<!--      // 댓글 객체 출력-->
<!--      console.log(comment);-->

<!--      // fetch() - 비동기 통신을 위한 API-->
<!--      const url = "/api/articles/" + comment.articleId + "/comments";-->
<!--      fetch(url, {-->
<!--        method: "post", // POST 요청-->
<!--        headers: { // 전송 본문의 데이터 타입 JSON 정보-->
<!--          "Content-Type": "application/json"-->
<!--        },-->
<!--        body: JSON.stringify(comment) // comment 객체를 JSON 문자열로 변환해 전송-->
<!--      }).then(response => {-->
<!--        // HTTP 응답 코드에 따른 메세지 출력-->
<!--        const msg = (response.ok) ? "댓글이 등록됐습니다." : "댓글 등록 실패";-->
<!--        alert(msg);-->

<!--        // 현재 페이지 새로 고침-->
<!--        window.location.reload();-->
<!--      })-->
<!--    });-->
<!--  }-->
<!--</script>-->
<script>
  {
  // 모달 요소 선택
    const commentEditModal = document.querySelector("#comment-edit-modal");

  // 모달 이벤트 감지
    commentEditModal.addEventListener("show.bs.modal", function(event) {
      // 1. 트리거 버튼 선택
      const triggerBtn = event.relatedTarget;
        // 모달 트리거 버튼은 매개변수로 받은 event의 relatedTarget
        // show.bs.modal 이벤트에서 event.target은 모달이고, event.relatedTarget은 트리거 버튼.


      // 2. 데이터 가져오기
        // 모달 트리거 버튼의 속성 값으로 댓글의 id, nickname, articleId 저장
        // 이 값들을 triggerBtn 변수를 통해 가져옴
      const id = triggerBtn.getAttribute("data-bs-id");
      const nickname = triggerBtn.getAttribute("data-bs-nickname");
      const body = triggerBtn.getAttribute("data-bs-body");
      const articleId = triggerBtn.getAttribute("data-bs-article-id");

      // 3. 수정 폼에 데이터 반영
        // 가져온 데이터를 모달의 각 폼에 반영
      document.querySelector("#edit-comment-nickname").value = nickname;
      document.querySelector("#edit-comment-body").value = body;
      document.querySelector("#edit-comment-id").value = id;
      document.querySelector("#edit-comment-article-id").value = articleId;
      });
  }
    // 수정 완료 버튼 선택
    const commentUpdateBtn = document.querySelector("#comment-update-btn");

    // 클릭 이벤트 처리
    commentUpdateBtn.addEventListener("click", function (input, init) {
      const comment = {
        id: document.querySelector("#edit-comment-id").value,
        nickname: document.querySelector("#edit-comment-nickname").value,
        body: document.querySelector("#edit-comment-body").value,
        article_id: document.querySelector("#edit-comment-article-id").value
      };
      console.log(comment); // 객체 생성 확인

      // 수정 REST API 호출
      const url = "/api/comments/" + comment.id;
      fetch(url, {
        method: "PATCH", // PATCH 요청
        headers: { // 전송 데이터 타입(JSON) 정보
          "Content-Type": "application/json"
        },
        body: JSON.stringify(comment) // JSON 문자열로 변환하여 전송
      }).then(response => { // 댓글 수정 확인 응답 처리
        // HTTP 응답 코드에 따른 메시지 출력
        const msg = (response.ok) ? "댓글이 수정됐습니다." : "댓글 수정 실패..!";
        alert(msg);
        // 현재 페이지 새로고침
        window.location.reload();
      });
    });
</script>